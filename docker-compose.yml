services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es_data:/usr/share/elasticsearch/data
  
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=your_user_name
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=your_db_name
    ports:
      - "5434:5432"  # 외부에서는 5434로 접근, 컨테이너 내부에서는 5432 사용.
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    command: postgres -c max_connections=200 -c shared_buffers=1GB
    restart: always
  
  airflow:
    build: .
    container_name: airflow
    ports:
      - "8081:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      # PostgreSQL 컨테이너 사용으로 변경
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./models:/opt/airflow/models
      - ./tests:/opt/airflow/tests
      - ./data:/opt/airflow/data
      - /var/run/docker.sock:/var/run/docker.sock
      - ./plugins:/opt/airflow/plugins
    command: >
      bash -c '
        airflow db init &&
        airflow users create --username admin --firstname admin --lastname admin --role Admin --email admin@example.com --password admin &&
        airflow webserver -D && 
        airflow scheduler
      '
    depends_on:
      - postgres
      
  model_server:
    build:
      context: .
      dockerfile: Dockerfile.model_server
    container_name: model_server
    ports:
      - "5000:5000"  # API 서버 포트 노출
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - ./models:/opt/models
    # API 서버 시작 명령어로 변경
    command: >
      bash -c '
        cd /opt/models &&
        python -u /opt/models/app.py
      '
volumes:
  es_data:
  postgres_data: